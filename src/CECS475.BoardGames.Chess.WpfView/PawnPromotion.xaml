<Window x:Class="CECS475.BoardGames.Chess.WpfView.PawnPromotion"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CECS475.BoardGames.Chess.WpfView"
        mc:Ignorable="d"
        ResizeMode="NoResize"
        WindowStyle="None"
        Height="125" Width="400">
    <Window.Resources>
        <local:ChessViewModel x:Key="vm"/>

        <local:ChessSquareBackgroundConverter x:Key="BackgroundColor"/>
        <local:ChessPieceImageConverter x:Key="ChessPiece"/>
    </Window.Resources>
    <StackPanel>
        <Label>Promote pawn to:</Label>
        <ItemsControl x:Name="BoardPositions" DataContext="{DynamicResource vm}"
                  >
            <!-- 
        The ItemsPanel is the "container" for the controls that get spit out. 
        A UniformGrid is a grid that auto-creates rows and columns that are evenly sized.
        -->
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="4" Rows="1" Background="White"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <!-- 
        The ItemTemplate defines what to generate for each entry in the ItemSource. Our ItemSource
        is a collection of ChessSquare objects, which we can bind to when generating the controls
        for the item.
        -->
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <!-- 
                This control is created for each element in the ItemSource. 
                A Border control draws a border around whatever control it contains.
                -->
                    <Border BorderThickness="1" BorderBrush="Gray"
                        MouseEnter="Border_MouseEnter"
                        MouseLeave="Border_MouseLeave"
                            MouseUp="Border_MouseUp">
                        <Border.Background>
                            <MultiBinding Converter="{StaticResource BackgroundColor}">
                                <Binding Path="Position"/>
                                <Binding Path="IsSelected"/>
                                <Binding Path="IsHighlighted"/>
                                <Binding Path="IsCheck"/>
                            </MultiBinding>
                        </Border.Background>

                        <!-- We bind the Source property to the Position property, using our converter
                     to turn the ChessPiece object into an Image -->
                        <Image Source="{Binding Player, Converter={StaticResource ChessPiece}}"/>

                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </StackPanel>
</Window>
